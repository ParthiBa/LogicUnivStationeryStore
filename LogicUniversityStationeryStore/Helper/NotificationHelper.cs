using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Net.Mail;
using System.Net;
namespace LogicUniversityStationeryStore.Helper
{
    public class NotificationHelper
    {

        public static string MESSAGE_APPROVED = "THE REQUEST HAS BEEN APPROVED";




        public static string empRequestApprovalawaiting()
        {
           return "a new request has been created by you .It will be processed once, your head approves your request";
        }

        public static string RequestApproved(string id)
        {
            return "your request R" +id  +" has been approved";

        }
        public static string RequestApproved(int id)
        {
            return "your request R" + id + " has been approved";

        }

        public static string RequestRjected(string id , String reason)
        {
            return "your request has been rejected . The reason is " + reason;
        }


        public static string RequestRjected(int id, String reason)
        {
            return "your request R"+ id+ " has been rejected . The reason is " + reason;
        }


        public static string RemovedDepartmentRepresentative()
        {

            return "you have been removed from Department Representative role";
        }

        public static string SelectedDepartmentRepresentative()
        {
            return "you have been appointed from Department Representative role. You are responsibility includes collection of the stationery goods";
        }

        public static string RemovedtempHeadOfDepartment()
        {
            return "you have been removed from tempory head" ;

        }


        public static string RemovedtempHeadOfDepartment(string DepartmentName)
        {
            return "you have been removed from temporary  head" + DepartmentName;

        }


        public static string SelectedtempHeadOfDepartment()
        {
            return "you have been appointed as Head of the Deapartment temporarily. You are responsibility includes collection of the stationery goods";
        }



           public static string SelectedtempHeadOfDepartment(string departmentName)
        {
            return "you have been appointed as Head of the Deapartment" + departmentName + " temporarily. You are responsibility includes collection of the stationery goods";
        }



        // remind head of the department regarding a new request
        public static string  HeadRemindRequest(string fromEmployeeName)
        {
            return "A new request generated by "+ fromEmployeeName+ "is waiting for your approval";
        }


        //remind the clerk these items is low stock
        public static string CLerkLowItemsInStock(List<string> ItemNames)
        {
            
            string  message1= "Items in below list are low in stock\n" ;
                foreach(string item in ItemNames)
                {
                    message1= message1 + item+ "\n";
                }

                
                
                
            string   message2 = " ,please purchase these items and refill the stock";

             return message1+message2;
        }



        // remind the department representative about the deleivey
        public static string InfromDepartmentRep(string collectionPoint,String timeSlot)
        {

            return "your department employees have ordered some items, you are requested to come to " +collectionPoint +"during " + timeSlot +". If you want to change the collection point , please log into our system and change it" ;
        }


         public static string InfromStoreClerk(string Department,string collectionPoint,String timeSlot)
        {

            return Department + " Department has changed the  collection point to "+ collectionPoint + "and Department Reprsentative will be waiting during "+ timeSlot ;
        }










        //remind the emp who ordered that advance request generated 
        public static string InfromAdvanceRequest()
        {
            return "Some of the items are not available now , please do not reorder  items";
        }






         public static string InfromAdvanceRequest(List<string> ItemName)
        {
            string  message1= "Some of the items below are not available now\n" ;
                foreach(string item in ItemName)
                {
                    message1= message1 + item+ "\n";
                }

                
                
                
            string   message2 = " , please do not reorder these items. These items are already ordered by the system and will be deleivered  to you in Near Future";

             return message1+message2;
        }





        public static string  informStockAdjustment(string clerkName)
         {
             return clerkName + "has made an stock adjustment";
         }



        public bool sendEmailbyClerk(string to, string Email, string subject)
        {
            string from = "logicrusselclerk@gmail.com";
            string password = "LogicRusselClerk345";
            string To = to;
            string Subject = subject;
            string Body =Email ;
            MailMessage msg = new MailMessage();
            msg.From = new MailAddress(from);
            msg.To.Add(new MailAddress(To));
            msg.Subject = Subject;
            msg.Body = Body;

            SmtpClient smtp = new SmtpClient();
            smtp.Host = "smtp.gmail.com";
            smtp.Port = 25;
            //	    smtp.Port = 587;
            smtp.Credentials = new NetworkCredential(from, password);
            smtp.EnableSsl = true;

            try
            {
                smtp.Send(msg);
                return true;
            }
            catch (SmtpException err)
            {
                Console.WriteLine(err);
                Console.Read();
                return false;
            }
        }



                public bool sendEmail(string from1 , string password1 ,string to, string Email, string subject)
        {
            string from = from1;
            string password = password1;
            string To = to;
            string Subject = subject;
            string Body =Email ;
            MailMessage msg = new MailMessage();
            msg.From = new MailAddress(from);
            msg.To.Add(new MailAddress(To));
            msg.Subject = Subject;
            msg.Body = Body;

            SmtpClient smtp = new SmtpClient();
            smtp.Host = "smtp.gmail.com";
            smtp.Port = 25;
            //	    smtp.Port = 587;
            smtp.Credentials = new NetworkCredential(from, password);
            smtp.EnableSsl = true;

            try
            {
                smtp.Send(msg);
                return true;
            }
            catch (SmtpException err)
            {
                Console.WriteLine(err);
                Console.Read();
                return false;
            }
        }

    }
}